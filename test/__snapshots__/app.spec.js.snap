// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Root component App matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Navigation />,
        <Router>
          <Home
            path="/"
            showLightbox={[Function]}
            subreddit="wallpapers"
          />
          <Feed
            path="/subreddit/:subreddit"
            showLightbox={[Function]}
            subreddit="wallpaper"
          />
        </Router>,
        "",
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Home
              path="/"
              showLightbox={[Function]}
              subreddit="wallpapers"
            />,
            <Feed
              path="/subreddit/:subreddit"
              showLightbox={[Function]}
              subreddit="wallpaper"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "path": "/",
              "showLightbox": [Function],
              "subreddit": "wallpapers",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "path": "/subreddit/:subreddit",
              "showLightbox": [Function],
              "subreddit": "wallpaper",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "",
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Navigation />,
          <Router>
            <Home
              path="/"
              showLightbox={[Function]}
              subreddit="wallpapers"
            />
            <Feed
              path="/subreddit/:subreddit"
              showLightbox={[Function]}
              subreddit="wallpaper"
            />
          </Router>,
          "",
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Home
                path="/"
                showLightbox={[Function]}
                subreddit="wallpapers"
              />,
              <Feed
                path="/subreddit/:subreddit"
                showLightbox={[Function]}
                subreddit="wallpaper"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "path": "/",
                "showLightbox": [Function],
                "subreddit": "wallpapers",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "path": "/subreddit/:subreddit",
                "showLightbox": [Function],
                "subreddit": "wallpaper",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "",
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
